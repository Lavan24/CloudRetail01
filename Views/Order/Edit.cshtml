@model Retail3.Models.Order

@{
    ViewData["Title"] = "Edit Order";
    var customers = ViewBag.Customers as List<Retail3.Models.Customer>;
    var products = ViewBag.Products as List<Retail3.Models.Product>;
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h3 class="card-title">Edit Order</h3>
                </div>
                <div class="card-body">
                  <form asp-action="Edit" asp-route-id="@Model.RowKey" method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <input type="hidden" asp-for="RowKey" />

    <div class="form-group mb-3">
        <label asp-for="CustomerRowKey" class="control-label">Customer</label>
        <select asp-for="CustomerRowKey" class="form-control" required>
            <option value="">-- Select Customer --</option>
            @if (customers != null)
            {
                foreach (var customer in customers)
                {
                    <option value="@customer.RowKey" @@(Model.CustomerRowKey == customer.RowKey ? "selected" : "")>
                        @customer.FullName
                    </option>
                }
            }
        </select>
        <span asp-validation-for="CustomerRowKey" class="text-danger"></span>
    </div>

    <div class="form-group mb-3">
        <label asp-for="ProductRowKey" class="control-label">Product</label>
        <select asp-for="ProductRowKey" class="form-control" required>
            <option value="">-- Select Product --</option>
            @if (products != null)
            {
                foreach (var product in products)
                {
                    <option value="@product.RowKey" @@(Model.ProductRowKey == product.RowKey ? "selected" : "")>
                        @product.ProductName - @product.Price.ToString("C")
                    </option>
                }
            }
        </select>
        <span asp-validation-for="ProductRowKey" class="text-danger"></span>
    </div>

    <div class="form-group mb-3">
        <label asp-for="OrderDate" class="control-label">Order Date</label>
        <input asp-for="OrderDate" class="form-control" type="datetime-local" />
        <span asp-validation-for="OrderDate" class="text-danger"></span>
    </div>

    <div class="form-group mb-3">
        <label asp-for="TotalAmount" class="control-label">Total Amount</label>
        <input asp-for="TotalAmount" class="form-control" type="number" step="0.01" />
        <span asp-validation-for="TotalAmount" class="text-danger"></span>
    </div>

    <div class="form-group mb-3">
        <label asp-for="Status" class="control-label">Status</label>
        <select asp-for="Status" class="form-control">
            <option value="Pending">Pending</option>
            <option value="Completed">Completed</option>
            <option value="Cancelled">Cancelled</option>
            <option value="Returned">Returned</option>
        </select>
        <span asp-validation-for="Status" class="text-danger"></span>
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save Changes</button>
        <a asp-action="Details" asp-route-id="@Model.RowKey" class="btn btn-secondary">Cancel</a>
    </div>
</form>

                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}