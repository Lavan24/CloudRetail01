@using System.Globalization
@model IEnumerable<Retail3.Models.Order>

@{
    ViewData["Title"] = "Order Management";
}

<style>
    /* Color variables based on the provided palette */
    :root {
        --dark-blue-1: #012a4a;
        --dark-blue-2: #013a63;
        --dark-blue-3: #01497c;
        --dark-blue-4: #014f86;
        --medium-blue-1: #2a6f97;
        --medium-blue-2: #2c7da0;
        --medium-blue-3: #468faf;
        --light-blue-1: #61a5c2;
        --light-blue-2: #89c2d9;
        --light-blue-3: #a9d6e5;
        --success-green: #28a745;
        --warning-orange: #fd7e14;
        --danger-red: #dc3545;
        --info-teal: #17a2b8;
    }

    body {
        background-color: #f8f9fa;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        color: #333;
    }

    .management-container {
        max-width: 1400px;
        margin: 2rem auto;
        padding: 2.5rem;
        background: white;
        border-radius: 10px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
    }

    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
        padding-bottom: 1rem;
        border-bottom: 2px solid var(--light-blue-2);
    }

    h1 {
        color: var(--dark-blue-1);
        font-weight: 600;
        margin: 0;
        display: flex;
        align-items: center;
    }

    .page-icon {
        background-color: var(--light-blue-2);
        color: var(--dark-blue-1);
        width: 45px;
        height: 45px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: 1rem;
        font-size: 1.3rem;
    }

    .btn-success {
        background: linear-gradient(to bottom, var(--success-green), #218838);
        border: none;
        border-radius: 6px;
        padding: 0.7rem 1.5rem;
        font-weight: 500;
        transition: all 0.3s;
        box-shadow: 0 3px 7px rgba(0,0,0,0.1);
        display: inline-flex;
        align-items: center;
    }

        .btn-success:hover {
            background: linear-gradient(to bottom, #218838, #1e7e34);
            transform: translateY(-2px);
            box-shadow: 0 5px 12px rgba(0,0,0,0.15);
        }

    .alert {
        border-radius: 6px;
        padding: 1rem 1.5rem;
        margin-bottom: 1.5rem;
        border: none;
    }

    .alert-success {
        background-color: rgba(40, 167, 69, 0.1);
        color: #155724;
        border-left: 4px solid var(--success-green);
    }

    .alert-danger {
        background-color: rgba(220, 53, 69, 0.1);
        color: #721c24;
        border-left: 4px solid var(--danger-red);
    }

    .alert-info {
        background-color: rgba(169, 214, 229, 0.2);
        color: var(--dark-blue-2);
        border-left: 4px solid var(--medium-blue-2);
    }

    .stats-grid {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 1rem;
        margin-bottom: 2rem;
    }

    .stat-card {
        background: white;
        border-radius: 8px;
        padding: 1rem;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08);
        border-left: 3px solid;
        text-align: center;
        transition: transform 0.2s;
    }

        .stat-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

    .stat-card-total {
        border-left-color: var(--medium-blue-1);
    }

    .stat-card-delivered {
        border-left-color: var(--success-green);
    }

    .stat-card-progress {
        border-left-color: var(--warning-orange);
    }

    .stat-card-shipped {
        border-left-color: var(--info-teal);
    }

    .stat-value {
        font-size: 1.5rem;
        font-weight: 700;
        margin-bottom: 0.25rem;
        line-height: 1;
    }

    .stat-card-total .stat-value {
        color: var(--dark-blue-2);
    }

    .stat-card-delivered .stat-value {
        color: var(--success-green);
    }

    .stat-card-progress .stat-value {
        color: var(--warning-orange);
    }

    .stat-card-shipped .stat-value {
        color: var(--info-teal);
    }

    .stat-label {
        font-size: 0.8rem;
        color: #6c757d;
        font-weight: 500;
    }

    .orders-card {
        border: none;
        border-radius: 10px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
        overflow: hidden;
    }

    .card-header {
        background: linear-gradient(135deg, var(--dark-blue-2) 0%, var(--dark-blue-4) 100%);
        color: white;
        padding: 1.2rem 1.5rem;
        font-weight: 600;
        font-size: 1.1rem;
        border: none;
        display: flex;
        align-items: center;
    }

        .card-header h5 {
            margin: 0;
            font-size: 1.2rem;
        }

    .card-body {
        padding: 0;
    }

    .orders-table {
        width: 100%;
        border-collapse: collapse;
        margin: 0;
    }

        .orders-table thead {
            background: linear-gradient(135deg, var(--dark-blue-1) 0%, var(--dark-blue-3) 100%);
            color: white;
        }

        .orders-table th {
            padding: 1.2rem;
            text-align: left;
            font-weight: 600;
            font-size: 0.95rem;
        }

        .orders-table tbody tr {
            border-bottom: 1px solid rgba(0,0,0,0.05);
            transition: background-color 0.2s;
        }

            .orders-table tbody tr:hover {
                background-color: rgba(169, 214, 229, 0.1);
            }

        .orders-table td {
            padding: 1.2rem;
            color: #495057;
            vertical-align: middle;
        }

    .status-badge {
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-weight: 500;
        font-size: 0.85rem;
        display: inline-flex;
        align-items: center;
        gap: 0.3rem;
    }

    .badge-delivered {
        background-color: rgba(40, 167, 69, 0.1);
        color: #155724;
        border: 1px solid rgba(40, 167, 69, 0.2);
    }

    .badge-shipped {
        background-color: rgba(23, 162, 184, 0.1);
        color: #0c5460;
        border: 1px solid rgba(23, 162, 184, 0.2);
    }

    .badge-processing {
        background-color: rgba(253, 126, 20, 0.1);
        color: #856404;
        border: 1px solid rgba(253, 126, 20, 0.2);
    }

    .badge-pending {
        background-color: rgba(108, 117, 125, 0.1);
        color: #383d41;
        border: 1px solid rgba(108, 117, 125, 0.2);
    }

    .badge-cancelled {
        background-color: rgba(220, 53, 69, 0.1);
        color: #721c24;
        border: 1px solid rgba(220, 53, 69, 0.2);
    }

    .row-cancelled {
        background-color: rgba(220, 53, 69, 0.03);
    }

    .row-delivered {
        background-color: rgba(40, 167, 69, 0.03);
    }

    .action-cell {
        width: 240px;
    }

    .btn-group {
        display: flex;
        gap: 0.5rem;
    }

    .btn-sm {
        padding: 0.5rem 0.9rem;
        border-radius: 5px;
        font-size: 0.85rem;
        font-weight: 500;
        transition: all 0.3s;
        display: inline-flex;
        align-items: center;
        border: none;
    }

    .btn-primary {
        background-color: var(--medium-blue-1);
    }

        .btn-primary:hover {
            background-color: var(--dark-blue-3);
            transform: translateY(-1px);
        }

    .btn-info {
        background-color: var(--light-blue-2);
        color: var(--dark-blue-1);
    }

        .btn-info:hover {
            background-color: var(--light-blue-1);
            color: var(--dark-blue-1);
            transform: translateY(-1px);
        }

    .btn-danger {
        background-color: var(--danger-red);
    }

        .btn-danger:hover {
            background-color: #c82333;
            transform: translateY(-1px);
        }

    .empty-state {
        text-align: center;
        padding: 3rem 2rem;
    }

    .empty-icon {
        font-size: 3.5rem;
        color: var(--light-blue-2);
        margin-bottom: 1rem;
    }

    .empty-title {
        color: var(--dark-blue-2);
        font-weight: 600;
        margin-bottom: 0.5rem;
    }

    .empty-text {
        color: #6c757d;
        margin-bottom: 1.5rem;
    }

    .icon-left {
        margin-right: 0.4rem;
    }

    .modal-content {
        border: none;
        border-radius: 10px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
    }

    .modal-header {
        background: linear-gradient(135deg, var(--danger-red) 0%, #c82333 100%);
        color: white;
        border: none;
        border-radius: 10px 10px 0 0;
        padding: 1.2rem 1.5rem;
    }

    .btn-close {
        filter: invert(1);
    }

    @@media (max-width: 768px) {
        .management-container

    {
        padding: 1.5rem;
    }

    .page-header {
        flex-direction: column;
        align-items: flex-start;
        gap: 1rem;
    }

    .stats-grid {
        grid-template-columns: 1fr;
    }

    .btn-group {
        flex-wrap: wrap;
    }

    .action-cell {
        width: auto;
    }

    .orders-table {
        display: block;
        overflow-x: auto;
    }

        .orders-table th,
        .orders-table td {
            padding: 0.8rem;
        }

    .page-icon {
        width: 40px;
        height: 40px;
        font-size: 1.1rem;
    }

    }
</style>

<div class="management-container">
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success">
            <i class="fas fa-check-circle mr-2"></i>@TempData["Success"]
        </div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">
            <i class="fas fa-exclamation-circle mr-2"></i>@TempData["Error"]
        </div>
    }

    <div class="page-header">
        <h1>
            <span class="page-icon">
                <i class="fas fa-clipboard-list"></i>
            </span>
            Order Management
        </h1>
        <a asp-action="Create" class="btn btn-success">
            <i class="fas fa-plus-circle icon-left"></i>Create New Order
        </a>
    </div>

    <!-- Order Statistics Cards -->
    <div class="stats-grid">
        <div class="stat-card stat-card-total">
            <div class="stat-value">@Model.Count()</div>
            <div class="stat-label">Total Orders</div>
        </div>

        <div class="stat-card stat-card-delivered">
            <div class="stat-value">@Model.Count(o => o.Status == "Delivered")</div>
            <div class="stat-label">Delivered</div>
        </div>

        <div class="stat-card stat-card-progress">
            <div class="stat-value">@Model.Count(o => o.Status == "Processing" || o.Status == "Pending")</div>
            <div class="stat-label">In Progress</div>
        </div>

        <div class="stat-card stat-card-shipped">
            <div class="stat-value">@Model.Count(o => o.Status == "Shipped")</div>
            <div class="stat-label">Shipped</div>
        </div>
    </div>

    <!-- Orders Table -->
    <div class="orders-card">
        <div class="card-header">
            <i class="fas fa-list-alt mr-2"></i>
            <h5>All Orders</h5>
        </div>
        <div class="card-body">
            @if (Model.Any())
            {
                <div class="table-responsive">
                    <table class="orders-table">
                        <thead>
                            <tr>
                                <th>Order #</th>
                                <th>Customer</th>
                                <th>Product</th>
                                <th>Order Date</th>
                                <th>Total Amount</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var order in Model)
                            {
                                <tr class="@GetStatusRowClass(order.Status)">
                                    <td><strong>#@order.RowKey.Substring(0, 8)</strong></td>
                                    <td>@order.FullName</td>
                                    <td>@order.ProductName</td>
                                    <td>@order.OrderDate.ToString("yyyy-MM-dd")</td>
                                    <td><strong>@order.Price.ToString( new CultureInfo("en-ZA"))</strong></td>
                                    <td>
                                        <span class="status-badge @GetStatusBadgeClass(order.Status)">
                                            <i class="fas @GetStatusIcon(order.Status)"></i>
                                            @order.Status
                                        </span>
                                    </td>
                                    <td class="action-cell">
                                        <div class="btn-group" role="group">
                                            <a asp-action="Details" asp-route-id="@order.RowKey" class="btn btn-info btn-sm">
                                                <i class="fas fa-eye icon-left"></i>Details
                                            </a>
                                            <a asp-action="Edit" asp-route-id="@order.RowKey" class="btn btn-primary btn-sm">
                                                <i class="fas fa-edit icon-left"></i>Edit
                                            </a>
                                            <button type="button" class="btn btn-danger btn-sm"
                                                    data-bs-toggle="modal"
                                                    data-bs-target="#deleteOrderModal"
                                                    data-orderid="@order.RowKey"
                                                    data-customername="@order.FullName">
                                                <i class="fas fa-trash-alt icon-left"></i>Delete
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="empty-state">
                    <div class="empty-icon">
                        <i class="fas fa-file-invoice"></i>
                    </div>
                    <h3 class="empty-title">No orders found</h3>
                    <p class="empty-text">Get started by creating your first order.</p>
                    <a asp-action="Create" class="btn btn-success">
                        <i class="fas fa-plus-circle icon-left"></i>Create First Order
                    </a>
                </div>
            }
        </div>
    </div>
</div>

<!-- Delete Order Modal -->
<div class="modal fade" id="deleteOrderModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"><i class="fas fa-exclamation-triangle me-2"></i>Delete Order</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="Delete" method="post">
                <input type="hidden" name="id" id="deleteOrderId">
                <div class="modal-body">
                    <p>Are you sure you want to delete the order for "<span id="deleteCustomerName" class="fw-semibold"></span>"?</p>
                    <p class="text-danger"><i class="fas fa-exclamation-circle me-1"></i>This action cannot be undone!</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        <i class="fas fa-times me-1"></i>Cancel
                    </button>
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-trash-alt me-1"></i>Delete Order
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@functions {
    private string GetStatusBadgeClass(string status)
    {
        return status?.ToLower() switch
        {
            "delivered" => "badge-delivered",
            "shipped" => "badge-shipped",
            "processing" => "badge-processing",
            "pending" => "badge-pending",
            "cancelled" => "badge-cancelled",
            _ => "badge-pending"
        };
    }

    private string GetStatusRowClass(string status)
    {
        return status?.ToLower() switch
        {
            "cancelled" => "row-cancelled",
            "delivered" => "row-delivered",
            _ => ""
        };
    }

    private string GetStatusIcon(string status)
    {
        return status?.ToLower() switch
        {
            "delivered" => "fa-check-circle",
            "shipped" => "fa-truck",
            "processing" => "fa-cog",
            "pending" => "fa-clock",
            "cancelled" => "fa-times-circle",
            _ => "fa-question-circle"
        };
    }
}

@section Scripts {
    <script>
        // Delete Order Modal
        $('#deleteOrderModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget);
            var modal = $(this);
            modal.find('#deleteOrderId').val(button.data('orderid'));
            modal.find('#deleteCustomerName').text(button.data('customername'));
        });
    </script>
}

<!-- Font Awesome for icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
<!-- Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>