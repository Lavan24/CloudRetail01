@model Retail3.Models.Order

@{
    ViewData["Title"] = "Create Order";
}

<div class="container">
    <!-- Display success/error messages -->
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success">@TempData["Success"]</div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">@TempData["Error"]</div>
    }

    <div class="card mb-4">
        <div class="card-header bg-primary text-white">
            <h5>Create New Order</h5>
        </div>
        <div class="card-body">
            <form asp-action="Create" method="post">

                @Html.AntiForgeryToken()

                @if (ViewData.ModelState.ErrorCount > 0)
                {
                    <div asp-validation-summary="All" class="alert alert-danger"></div>
                }

                <div class="row g-3">
                    <div class="col-md-6">
                        <label class="form-label">Customer</label>
                        <select asp-for="CustomerRowKey" class="form-select" required>
                            <option value="">Select Customer</option>
                            @if (ViewBag.Customers != null)
                            {
                                foreach (var customer in ViewBag.Customers as List<Retail3.Models.Customer>)
                                {
                                    <option value="@customer.RowKey">@customer.FullName</option>
                                }
                            }
                        </select>
                        <span asp-validation-for="CustomerRowKey" class="text-danger"></span>
                    </div>

                    <div class="col-md-6">
                        <label class="form-label">Product</label>
                        <select asp-for="ProductRowKey" class="form-select" required id="productSelect">
                            <option value="">Select Product</option>
                            @if (ViewBag.Products != null)
                            {
                                foreach (var product in ViewBag.Products as List<Retail3.Models.Product>)
                                {
                                    <option value="@product.RowKey" data-price="@product.Price">@product.ProductName - @product.Price.ToString("C")</option>
                                }
                            }
                        </select>
                        <span asp-validation-for="ProductRowKey" class="text-danger"></span>
                    </div>

                    <div class="col-md-6">
                        <label asp-for="OrderDate" class="form-label"></label>
                        <input asp-for="OrderDate" class="form-control" type="date"
                               value="@DateTime.Now.ToString("yyyy-MM-dd")" required />
                        <span asp-validation-for="OrderDate" class="text-danger"></span>
                    </div>

                    <div class="col-md-6">
                        <label asp-for="TotalAmount" class="form-label"></label>
                        <input asp-for="TotalAmount" class="form-control" type="number" step="0.01" min="0"
                               id="totalAmount" readonly required />
                        <span asp-validation-for="TotalAmount" class="text-danger"></span>
                    </div>

                    <div class="col-md-6">
                        <label asp-for="Status" class="form-label"></label>
                        <select asp-for="Status" class="form-select" required>
                            <option value="">Select Status</option>
                            <option value="Pending">Pending</option>
                            <option value="Processing">Processing</option>
                            <option value="Shipped">Shipped</option>
                            <option value="Delivered">Delivered</option>
                            <option value="Cancelled">Cancelled</option>
                        </select>
                        <span asp-validation-for="Status" class="text-danger"></span>
                    </div>

                    <div class="col-12">
                        <div class="form-group mt-4">
                            <button type="submit" class="btn btn-primary">Create Order</button>
                            <a asp-action="Index" class="btn btn-secondary">Back to Orders</a>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function() {
            // Auto-set total amount when product is selected
            $('#productSelect').change(function() {
                var selectedOption = $(this).find('option:selected');
                var price = selectedOption.data('price');

                if (price) {
                    $('#totalAmount').val(price);
                } else {
                    $('#totalAmount').val('0.00');
                }
            });

            // Set default status to Pending
            $('#Status').val('Pending');
        });
    </script>
}